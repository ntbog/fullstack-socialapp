{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\projects\\\\social-app\\\\src\\\\shared\\\\components\\\\FormElements\\\\Input.js\";\nimport React, { useReducer } from 'react';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return { ...state,\n        value: action.val,\n        isValid: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: '',\n    isValid: false\n  });\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value\n    });\n  };\n\n  const element = props.element === 'input' ? React.createElement(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changeHandler,\n    value: inputState.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }) : React.createElement(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    onChange: changeHandler,\n    value: inputState.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  });\n  return React.createElement(\"div\", {\n    className: `form-control ${!inputState.isValid && 'form-control--invalid'}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: props.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, props.label), element, !inputState.isValid && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, props.errorText));\n};\n\nexport default Input;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/projects/social-app/src/shared/components/FormElements/Input.js"],"names":["React","useReducer","inputReducer","state","action","type","value","val","isValid","Input","props","inputState","dispatch","changeHandler","event","target","element","id","placeholder","rows","label","errorText"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAO,aAAP;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvC,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,QAAL;AACC,aAAO,EACN,GAAGF,KADG;AAENG,QAAAA,KAAK,EAAEF,MAAM,CAACG,GAFR;AAGNC,QAAAA,OAAO,EAAE;AAHH,OAAP;;AAKD;AACC,aAAOL,KAAP;AARF;AAUA,CAXD;;AAaA,MAAMM,KAAK,GAAGC,KAAK,IAAI;AACtB,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBX,UAAU,CAACC,YAAD,EAAe;AACvDI,IAAAA,KAAK,EAAE,EADgD;AAEvDE,IAAAA,OAAO,EAAE;AAF8C,GAAf,CAAzC;;AAKA,QAAMK,aAAa,GAAGC,KAAK,IAAI;AAC9BF,IAAAA,QAAQ,CAAC;AAAEP,MAAAA,IAAI,EAAE,QAAR;AAAkBE,MAAAA,GAAG,EAAEO,KAAK,CAACC,MAAN,CAAaT;AAApC,KAAD,CAAR;AACA,GAFD;;AAIA,QAAMU,OAAO,GACZN,KAAK,CAACM,OAAN,KAAkB,OAAlB,GACC;AACC,IAAA,EAAE,EAAEN,KAAK,CAACO,EADX;AAEC,IAAA,IAAI,EAAEP,KAAK,CAACL,IAFb;AAGC,IAAA,WAAW,EAAEK,KAAK,CAACQ,WAHpB;AAIC,IAAA,QAAQ,EAAEL,aAJX;AAKC,IAAA,KAAK,EAAEF,UAAU,CAACL,KALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GASC;AACC,IAAA,EAAE,EAAEI,KAAK,CAACO,EADX;AAEC,IAAA,IAAI,EAAEP,KAAK,CAACS,IAAN,IAAc,CAFrB;AAGC,IAAA,QAAQ,EAAEN,aAHX;AAIC,IAAA,KAAK,EAAEF,UAAU,CAACL,KAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF;AAkBA,SACC;AACC,IAAA,SAAS,EAAG,gBAAe,CAACK,UAAU,CAACH,OAAZ,IAC1B,uBAAwB,EAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIC;AAAO,IAAA,OAAO,EAAEE,KAAK,CAACO,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BP,KAAK,CAACU,KAAjC,CAJD,EAKEJ,OALF,EAME,CAACL,UAAU,CAACH,OAAZ,IAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,KAAK,CAACW,SAAV,CANzB,CADD;AAUA,CAtCD;;AAwCA,eAAeZ,KAAf","sourcesContent":["import React, { useReducer } from 'react';\r\n\r\nimport './Input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'CHANGE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tvalue: action.val,\r\n\t\t\t\tisValid: true\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nconst Input = props => {\r\n\tconst [inputState, dispatch] = useReducer(inputReducer, {\r\n\t\tvalue: '',\r\n\t\tisValid: false\r\n\t});\r\n\r\n\tconst changeHandler = event => {\r\n\t\tdispatch({ type: 'CHANGE', val: event.target.value });\r\n\t};\r\n\r\n\tconst element =\r\n\t\tprops.element === 'input' ? (\r\n\t\t\t<input\r\n\t\t\t\tid={props.id}\r\n\t\t\t\ttype={props.type}\r\n\t\t\t\tplaceholder={props.placeholder}\r\n\t\t\t\tonChange={changeHandler}\r\n\t\t\t\tvalue={inputState.value}\r\n\t\t\t/>\r\n\t\t) : (\r\n\t\t\t<textarea\r\n\t\t\t\tid={props.id}\r\n\t\t\t\trows={props.rows || 3}\r\n\t\t\t\tonChange={changeHandler}\r\n\t\t\t\tvalue={inputState.value}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`form-control ${!inputState.isValid &&\r\n\t\t\t\t'form-control--invalid'}`}\r\n\t\t>\r\n\t\t\t<label htmlFor={props.id}>{props.label}</label>\r\n\t\t\t{element}\r\n\t\t\t{!inputState.isValid && <p>{props.errorText}</p>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Input;\r\n"]},"metadata":{},"sourceType":"module"}