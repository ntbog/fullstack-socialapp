{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\projects\\\\social-app\\\\src\\\\places\\\\pages\\\\NewPlace.js\";\nimport React, { useCallback, useReducer } from 'react';\nimport Input from '../../shared/components/FormElements/Input';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\nimport './NewPlace.css';\n\nconst formReducer = (state, action) => {};\n\nconst NewPlace = () => {\n  useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    isValid: false\n  }); //useCallback to avoid infinite loops with useEffect in <Input/>\n\n  const titleInputHandler = useCallback((id, value, isValid) => {}, []);\n  const descriptionInputHandler = useCallback((id, value, isValid) => {}, []);\n  return React.createElement(\"form\", {\n    className: \"place-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: titleInputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (at least 5 characters).\",\n    onInput: descriptionInputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n};\n\nexport default NewPlace;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/projects/social-app/src/places/pages/NewPlace.js"],"names":["React","useCallback","useReducer","Input","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","formReducer","state","action","NewPlace","inputs","title","value","isValid","description","titleInputHandler","id","descriptionInputHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,QAA+C,OAA/C;AAEA,OAAOC,KAAP,MAAkB,4CAAlB;AACA,SACCC,iBADD,EAECC,mBAFD,QAGO,8BAHP;AAIA,OAAO,gBAAP;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB,CAAE,CAAzC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACtBP,EAAAA,UAAU,CAACI,WAAD,EAAc;AACvBI,IAAAA,MAAM,EAAE;AACPC,MAAAA,KAAK,EAAE;AACNC,QAAAA,KAAK,EAAE,EADD;AAENC,QAAAA,OAAO,EAAE;AAFH,OADA;AAKPC,MAAAA,WAAW,EAAE;AACZF,QAAAA,KAAK,EAAE,EADK;AAEZC,QAAAA,OAAO,EAAE;AAFG;AALN,KADe;AAWvBA,IAAAA,OAAO,EAAE;AAXc,GAAd,CAAV,CADsB,CAetB;;AACA,QAAME,iBAAiB,GAAGd,WAAW,CAAC,CAACe,EAAD,EAAKJ,KAAL,EAAYC,OAAZ,KAAwB,CAAE,CAA3B,EAA6B,EAA7B,CAArC;AACA,QAAMI,uBAAuB,GAAGhB,WAAW,CAAC,CAACe,EAAD,EAAKJ,KAAL,EAAYC,OAAZ,KAAwB,CAAE,CAA3B,EAA6B,EAA7B,CAA3C;AAEA,SACC;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD;AACC,IAAA,EAAE,EAAC,OADJ;AAEC,IAAA,OAAO,EAAC,OAFT;AAGC,IAAA,IAAI,EAAC,MAHN;AAIC,IAAA,KAAK,EAAC,OAJP;AAKC,IAAA,UAAU,EAAE,CAACT,iBAAiB,EAAlB,CALb;AAMC,IAAA,SAAS,EAAC,6BANX;AAOC,IAAA,OAAO,EAAEW,iBAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAUC,oBAAC,KAAD;AACC,IAAA,EAAE,EAAC,aADJ;AAEC,IAAA,OAAO,EAAC,UAFT;AAGC,IAAA,KAAK,EAAC,aAHP;AAIC,IAAA,UAAU,EAAE,CAACV,mBAAmB,CAAC,CAAD,CAApB,CAJb;AAKC,IAAA,SAAS,EAAC,2DALX;AAMC,IAAA,OAAO,EAAEY,uBANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVD,CADD;AAqBA,CAxCD;;AA0CA,eAAeR,QAAf","sourcesContent":["import React, { useCallback, useReducer } from 'react';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport {\n\tVALIDATOR_REQUIRE,\n\tVALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport './NewPlace.css';\n\nconst formReducer = (state, action) => {};\n\nconst NewPlace = () => {\n\tuseReducer(formReducer, {\n\t\tinputs: {\n\t\t\ttitle: {\n\t\t\t\tvalue: '',\n\t\t\t\tisValid: false\n\t\t\t},\n\t\t\tdescription: {\n\t\t\t\tvalue: '',\n\t\t\t\tisValid: false\n\t\t\t}\n\t\t},\n\t\tisValid: false\n\t});\n\n\t//useCallback to avoid infinite loops with useEffect in <Input/>\n\tconst titleInputHandler = useCallback((id, value, isValid) => {}, []);\n\tconst descriptionInputHandler = useCallback((id, value, isValid) => {}, []);\n\n\treturn (\n\t\t<form className=\"place-form\">\n\t\t\t<Input\n\t\t\t\tid=\"title\"\n\t\t\t\telement=\"input\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tlabel=\"Title\"\n\t\t\t\tvalidators={[VALIDATOR_REQUIRE()]}\n\t\t\t\terrorText=\"Please enter a valid title.\"\n\t\t\t\tonInput={titleInputHandler}\n\t\t\t/>\n\t\t\t<Input\n\t\t\t\tid=\"description\"\n\t\t\t\telement=\"textarea\"\n\t\t\t\tlabel=\"Description\"\n\t\t\t\tvalidators={[VALIDATOR_MINLENGTH(5)]}\n\t\t\t\terrorText=\"Please enter a valid description (at least 5 characters).\"\n\t\t\t\tonInput={descriptionInputHandler}\n\t\t\t/>\n\t\t</form>\n\t);\n};\n\nexport default NewPlace;\n"]},"metadata":{},"sourceType":"module"}