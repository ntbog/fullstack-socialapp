{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\projects\\\\social-app\\\\src\\\\user\\\\pages\\\\Auth.js\";\nimport React, { useState } from 'react';\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hooks';\nimport './Auth.css';\n\nconst Auth = () => {\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({\n        name: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({ ...formState.inputs\n      }, false);\n    }\n\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  return React.createElement(Card, {\n    className: \"authentication\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Login Required\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: authSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, !isLoginMode && React.createElement(Input, {\n    element: \"input\",\n    id: \"name\",\n    type: \"text\",\n    label: \"Your Name\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a name.\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Input, {\n    element: \"input\",\n    id: \"email\",\n    type: \"email\",\n    label: \"E-mail\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"Please enter a valid email address.\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Input, {\n    element: \"input\",\n    id: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(6)],\n    errorText: \"Please enter a valid password, at least 6 characters.\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, isLoginMode ? 'LOGIN' : 'SIGNUP')), React.createElement(Button, {\n    inverse: true,\n    onClick: switchModeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"SWITCH TO \", isLoginMode ? 'SIGNUP' : 'LOGIN'));\n};\n\nexport default Auth;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/projects/social-app/src/user/pages/Auth.js"],"names":["React","useState","Card","Input","Button","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","Auth","isLoginMode","setIsLoginMode","formState","inputHandler","setFormData","email","value","isValid","password","switchModeHandler","name","undefined","inputs","prevMode","authSubmitHandler","event","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport {\r\n\tVALIDATOR_EMAIL,\r\n\tVALIDATOR_MINLENGTH,\r\n\tVALIDATOR_REQUIRE\r\n} from '../../shared/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hooks';\r\nimport './Auth.css';\r\n\r\nconst Auth = () => {\r\n\tconst [isLoginMode, setIsLoginMode] = useState(true);\r\n\r\n\tconst [formState, inputHandler, setFormData] = useForm(\r\n\t\t{\r\n\t\t\temail: {\r\n\t\t\t\tvalue: '',\r\n\t\t\t\tisValid: false\r\n\t\t\t},\r\n\t\t\tpassword: {\r\n\t\t\t\tvalue: '',\r\n\t\t\t\tisValid: false\r\n\t\t\t}\r\n\t\t},\r\n\t\tfalse\r\n\t);\r\n\r\n\tconst switchModeHandler = () => {\r\n\t\tif (!isLoginMode) {\r\n\t\t\tsetFormData(\r\n\t\t\t\t{\r\n\t\t\t\t\tname: undefined\r\n\t\t\t\t},\r\n\t\t\t\tformState.inputs.email.isValid &&\r\n\t\t\t\t\tformState.inputs.password.isValid\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tsetFormData({ ...formState.inputs }, false);\r\n\t\t}\r\n\t\tsetIsLoginMode(prevMode => !prevMode);\r\n\t};\r\n\r\n\tconst authSubmitHandler = event => {\r\n\t\tevent.preventDefault();\r\n\t\tconsole.log(formState.inputs);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Card className=\"authentication\">\r\n\t\t\t<h2>Login Required</h2>\r\n\t\t\t<hr />\r\n\t\t\t<form onSubmit={authSubmitHandler}>\r\n\t\t\t\t{!isLoginMode && (\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\telement=\"input\"\r\n\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tlabel=\"Your Name\"\r\n\t\t\t\t\t\tvalidators={[VALIDATOR_REQUIRE()]}\r\n\t\t\t\t\t\terrorText=\"Please enter a name.\"\r\n\t\t\t\t\t\tonInput={inputHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t<Input\r\n\t\t\t\t\telement=\"input\"\r\n\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\tlabel=\"E-mail\"\r\n\t\t\t\t\tvalidators={[VALIDATOR_EMAIL()]}\r\n\t\t\t\t\terrorText=\"Please enter a valid email address.\"\r\n\t\t\t\t\tonInput={inputHandler}\r\n\t\t\t\t/>\r\n\t\t\t\t<Input\r\n\t\t\t\t\telement=\"input\"\r\n\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\tvalidators={[VALIDATOR_MINLENGTH(6)]}\r\n\t\t\t\t\terrorText=\"Please enter a valid password, at least 6 characters.\"\r\n\t\t\t\t\tonInput={inputHandler}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button type=\"submit\" disabled={!formState.isValid}>\r\n\t\t\t\t\t{isLoginMode ? 'LOGIN' : 'SIGNUP'}\r\n\t\t\t\t</Button>\r\n\t\t\t</form>\r\n\t\t\t<Button inverse onClick={switchModeHandler}>\r\n\t\t\t\tSWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\r\n\t\t\t</Button>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default Auth;\r\n"]},"metadata":{},"sourceType":"module"}