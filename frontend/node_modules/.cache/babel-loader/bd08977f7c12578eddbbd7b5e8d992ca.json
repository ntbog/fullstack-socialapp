{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\projects\\\\social-app\\\\src\\\\shared\\\\components\\\\FormElements\\\\Input.js\";\nimport React, { useReducer, useEffect } from 'react';\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return { ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n\n    case 'TOUCH':\n      return { ...state,\n        isTouched: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: '',\n    isTouched: false,\n    isValid: false\n  });\n  const {\n    id,\n    onInput\n  } = props;\n  const {\n    value,\n    isValid\n  } = inputState;\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element = props.element === 'input' ? React.createElement(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }) : React.createElement(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  });\n  return React.createElement(\"div\", {\n    className: `form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: props.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, props.label), element, !inputState.isValid && inputState.isTouched && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, props.errorText));\n};\n\nexport default Input;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/projects/social-app/src/shared/components/FormElements/Input.js"],"names":["React","useReducer","useEffect","validate","inputReducer","state","action","type","value","val","isValid","validators","isTouched","Input","props","inputState","dispatch","id","onInput","changeHandler","event","target","touchHandler","element","placeholder","rows","label","errorText"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { validate } from '../../util/validators';\r\nimport './Input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'CHANGE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tvalue: action.val,\r\n\t\t\t\tisValid: validate(action.val, action.validators)\r\n\t\t\t};\r\n\t\tcase 'TOUCH':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisTouched: true\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nconst Input = props => {\r\n\tconst [inputState, dispatch] = useReducer(inputReducer, {\r\n\t\tvalue: '',\r\n\t\tisTouched: false,\r\n\t\tisValid: false\r\n\t});\r\n\r\n\tconst { id, onInput } = props;\r\n\tconst { value, isValid } = inputState;\r\n\r\n\tuseEffect(() => {\r\n\t\tonInput(id, value, isValid);\r\n\t}, [id, value, isValid, onInput]);\r\n\r\n\tconst changeHandler = event => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'CHANGE',\r\n\t\t\tval: event.target.value,\r\n\t\t\tvalidators: props.validators\r\n\t\t});\r\n\t};\r\n\r\n\tconst touchHandler = () => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'TOUCH'\r\n\t\t});\r\n\t};\r\n\r\n\tconst element =\r\n\t\tprops.element === 'input' ? (\r\n\t\t\t<input\r\n\t\t\t\tid={props.id}\r\n\t\t\t\ttype={props.type}\r\n\t\t\t\tplaceholder={props.placeholder}\r\n\t\t\t\tonChange={changeHandler}\r\n\t\t\t\tonBlur={touchHandler}\r\n\t\t\t\tvalue={inputState.value}\r\n\t\t\t/>\r\n\t\t) : (\r\n\t\t\t<textarea\r\n\t\t\t\tid={props.id}\r\n\t\t\t\trows={props.rows || 3}\r\n\t\t\t\tonChange={changeHandler}\r\n\t\t\t\tonBlur={touchHandler}\r\n\t\t\t\tvalue={inputState.value}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`form-control ${!inputState.isValid &&\r\n\t\t\t\tinputState.isTouched &&\r\n\t\t\t\t'form-control--invalid'}`}\r\n\t\t>\r\n\t\t\t<label htmlFor={props.id}>{props.label}</label>\r\n\t\t\t{element}\r\n\t\t\t{!inputState.isValid && inputState.isTouched && (\r\n\t\t\t\t<p>{props.errorText}</p>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Input;\r\n"]},"metadata":{},"sourceType":"module"}