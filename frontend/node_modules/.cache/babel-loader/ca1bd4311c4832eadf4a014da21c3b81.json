{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\projects\\\\social-app\\\\src\\\\App.js\";\nimport React, { useState, useCallback } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport Users from './user/pages/Users';\nimport NewPlace from './places/pages/NewPlace';\nimport UserPlaces from './places/pages/UserPlaces';\nimport UpdatePlace from './places/pages/UpdatePlace';\nimport Auth from './user/pages/Auth';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './shared/context/auth-context';\n\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const login = useCallback(() => {\n    setIsLoggedIn(true);\n  }, []);\n  const logout = useCallback(() => {\n    setIsLoggedIn(false);\n  }, []);\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      login: login,\n      logout: logout\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(MainNavigation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Users, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"/:userId/places\",\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(UserPlaces, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"/places/new\",\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(NewPlace, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"/places/:placeId\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(UpdatePlace, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"/auth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Auth, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/projects/social-app/src/App.js"],"names":["React","useState","useCallback","BrowserRouter","Router","Route","Redirect","Switch","Users","NewPlace","UserPlaces","UpdatePlace","Auth","MainNavigation","AuthContext","App","isLoggedIn","setIsLoggedIn","login","logout"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SACCC,aAAa,IAAIC,MADlB,EAECC,KAFD,EAGCC,QAHD,EAICC,MAJD,QAKO,kBALP;AAOA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,cAAP,MAA2B,+CAA3B;AACA,SAASC,WAAT,QAA4B,+BAA5B;;AAEA,MAAMC,GAAG,GAAG,MAAM;AACjB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAMiB,KAAK,GAAGhB,WAAW,CAAC,MAAM;AAC/Be,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,GAFwB,EAEtB,EAFsB,CAAzB;AAIA,QAAME,MAAM,GAAGjB,WAAW,CAAC,MAAM;AAChCe,IAAAA,aAAa,CAAC,KAAD,CAAb;AACA,GAFyB,EAEvB,EAFuB,CAA1B;AAIA,SACC,oBAAC,WAAD,CAAa,QAAb;AACC,IAAA,KAAK,EAAE;AAAED,MAAAA,UAAU,EAAEA,UAAd;AAA0BE,MAAAA,KAAK,EAAEA,KAAjC;AAAwCC,MAAAA,MAAM,EAAEA;AAAhD,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,KAAK,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,EAIC,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,iBAAZ;AAA8B,IAAA,KAAK,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAJD,EAOC,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,aAAZ;AAA0B,IAAA,KAAK,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAPD,EAUC,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,kBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAVD,EAaC,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAbD,EAgBC,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBD,CADD,CAFD,CAHD,CADD;AA6BA,CAxCD;;AA0CA,eAAeJ,GAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport {\n\tBrowserRouter as Router,\n\tRoute,\n\tRedirect,\n\tSwitch\n} from 'react-router-dom';\n\nimport Users from './user/pages/Users';\nimport NewPlace from './places/pages/NewPlace';\nimport UserPlaces from './places/pages/UserPlaces';\nimport UpdatePlace from './places/pages/UpdatePlace';\nimport Auth from './user/pages/Auth';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './shared/context/auth-context';\n\nconst App = () => {\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\n\n\tconst login = useCallback(() => {\n\t\tsetIsLoggedIn(true);\n\t}, []);\n\n\tconst logout = useCallback(() => {\n\t\tsetIsLoggedIn(false);\n\t}, []);\n\n\treturn (\n\t\t<AuthContext.Provider\n\t\t\tvalue={{ isLoggedIn: isLoggedIn, login: login, logout: logout }}\n\t\t>\n\t\t\t<Router>\n\t\t\t\t<MainNavigation />\n\t\t\t\t<main>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/\" exact>\n\t\t\t\t\t\t\t<Users />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/:userId/places\" exact>\n\t\t\t\t\t\t\t<UserPlaces />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/places/new\" exact>\n\t\t\t\t\t\t\t<NewPlace />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/places/:placeId\">\n\t\t\t\t\t\t\t<UpdatePlace />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/auth\">\n\t\t\t\t\t\t\t<Auth />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Redirect to=\"/\" />\n\t\t\t\t\t</Switch>\n\t\t\t\t</main>\n\t\t\t</Router>\n\t\t</AuthContext.Provider>\n\t);\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}